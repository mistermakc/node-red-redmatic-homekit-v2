{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../ice/src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import os from \"os\";\nimport * as nodeIp from \"ip\";\nimport type { InterfaceAddresses } from \"../../common/src/network\";\nimport { Connection, serverReflexiveCandidate } from \"./ice\";\nimport { StunProtocol } from \"./stun/protocol\";\nimport type { Address } from \"./types/model\";\n\nexport async function getGlobalIp(\n  stunServer?: Address,\n  interfaceAddresses?: InterfaceAddresses,\n) {\n  const connection = new Connection(true, {\n    stunServer: stunServer ?? [\"stun.l.google.com\", 19302],\n  });\n  await connection.gatherCandidates();\n\n  const protocol = new StunProtocol(connection);\n  protocol.localCandidate = connection.localCandidates[0];\n  await protocol.connectionMade(true, undefined, interfaceAddresses);\n  const candidate = await serverReflexiveCandidate(protocol, [\n    \"stun.l.google.com\",\n    19302,\n  ]);\n\n  await connection.close();\n  await protocol.close();\n\n  if (!candidate?.host) {\n    throw new Error(\"host not exist\");\n  }\n\n  return candidate?.host;\n}\n\nexport function normalizeFamilyNodeV18(family: string | number): 4 | 6 {\n  if (family === \"IPv4\") return 4;\n  if (family === \"IPv6\") return 6;\n\n  return family as 4 | 6;\n}\n\nfunction isAutoconfigurationAddress(info: os.NetworkInterfaceInfo) {\n  return (\n    normalizeFamilyNodeV18(info.family) === 4 &&\n    info.address?.startsWith(\"169.254.\")\n  );\n}\n\nfunction nodeIpAddress(family: number): string[] {\n  // https://chromium.googlesource.com/external/webrtc/+/master/rtc_base/network.cc#236\n  const costlyNetworks = [\"ipsec\", \"tun\", \"utun\", \"tap\"];\n  const banNetworks = [\"vmnet\", \"veth\"];\n\n  const interfaces = os.networkInterfaces();\n\n  const all = Object.keys(interfaces)\n    .map((nic) => {\n      for (const word of [...costlyNetworks, ...banNetworks]) {\n        if (nic.startsWith(word)) {\n          return {\n            nic,\n            addresses: [],\n          };\n        }\n      }\n      const addresses = interfaces[nic]!.filter(\n        (details) =>\n          normalizeFamilyNodeV18(details.family) === family &&\n          !nodeIp.isLoopback(details.address) &&\n          !isAutoconfigurationAddress(details),\n      );\n      return {\n        nic,\n        addresses: addresses.map((address) => address.address),\n      };\n    })\n    .filter((address) => !!address);\n\n  // os.networkInterfaces doesn't actually return addresses in a good order.\n  // have seen instances where en0 (ethernet) is after en1 (wlan), etc.\n  // eth0 > eth1\n  all.sort((a, b) => a.nic.localeCompare(b.nic));\n  return Object.values(all).flatMap((entry) => entry.addresses);\n}\n\nexport function getHostAddresses(useIpv4: boolean, useIpv6: boolean) {\n  const address: string[] = [];\n  if (useIpv4) address.push(...nodeIpAddress(4));\n  if (useIpv6) address.push(...nodeIpAddress(6));\n  return address;\n}\n"]}