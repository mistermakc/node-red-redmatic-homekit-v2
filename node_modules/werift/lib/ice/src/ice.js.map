{"version":3,"file":"ice.js","sourceRoot":"","sources":["../../../../ice/src/ice.ts"],"names":[],"mappings":"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","sourcesContent":["import { randomBytes } from \"crypto\";\nimport { isIPv4 } from \"net\";\n\nimport debug from \"debug\";\nimport { Uint64BE } from \"int64-buffer\";\n\nimport isEqual from \"lodash/isEqual\";\nimport PCancelable from \"p-cancelable\";\nimport { Event } from \"rx.mini\";\nimport timers from \"timers/promises\";\n\nimport type { InterfaceAddresses } from \"../../common/src/network\";\nimport { Candidate, candidateFoundation, candidatePriority } from \"./candidate\";\nimport { MdnsLookup } from \"./dns/lookup\";\nimport type { TransactionError } from \"./exceptions\";\nimport { type Future, PQueue, future, randomString } from \"./helper\";\nimport { classes, methods } from \"./stun/const\";\nimport { Message, parseMessage } from \"./stun/message\";\nimport { StunProtocol } from \"./stun/protocol\";\nimport { createTurnEndpoint } from \"./turn/protocol\";\nimport type { Address, Protocol } from \"./types/model\";\nimport { getHostAddresses, normalizeFamilyNodeV18 } from \"./utils\";\n\nconst log = debug(\"werift-ice : packages/ice/src/ice.ts : log\");\n\nexport class Connection {\n  localUserName = randomString(4);\n  localPassword = randomString(22);\n  remotePassword: string = \"\";\n  remoteUsername: string = \"\";\n  remoteIsLite = false;\n  checkList: CandidatePair[] = [];\n  localCandidates: Candidate[] = [];\n  stunServer?: Address;\n  turnServer?: Address;\n  useIpv4: boolean;\n  useIpv6: boolean;\n  options: IceOptions;\n  remoteCandidatesEnd = false;\n  _localCandidatesEnd = false;\n  _tieBreaker: bigint = BigInt(new Uint64BE(randomBytes(64)).toString());\n  state: IceState = \"new\";\n  lookup?: MdnsLookup;\n  restarted = false;\n\n  readonly onData = new Event<[Buffer, number]>();\n  readonly stateChanged = new Event<[IceState]>();\n\n  private _remoteCandidates: Candidate[] = [];\n  // P2P接続完了したソケット\n  private nominated?: CandidatePair;\n  private nominating = false;\n  private checkListDone = false;\n  private checkListState = new PQueue<number>();\n  private earlyChecks: [Message, Address, Protocol][] = [];\n  private localCandidatesStart = false;\n  private protocols: Protocol[] = [];\n  private queryConsentHandle?: Future;\n  private promiseGatherCandidates?: Event<[]>;\n\n  constructor(public iceControlling: boolean, options?: Partial<IceOptions>) {\n    this.options = {\n      ...defaultOptions,\n      ...options,\n    };\n    const { stunServer, turnServer, useIpv4, useIpv6 } = this.options;\n    this.stunServer = validateAddress(stunServer);\n    this.turnServer = validateAddress(turnServer);\n    this.useIpv4 = useIpv4;\n    this.useIpv6 = useIpv6;\n  }\n\n  setRemoteParams({\n    iceLite,\n    usernameFragment,\n    password,\n  }: {\n    iceLite: boolean;\n    usernameFragment: string;\n    password: string;\n  }) {\n    log(\"setRemoteParams\", { iceLite, usernameFragment, password });\n    this.remoteIsLite = iceLite;\n    this.remoteUsername = usernameFragment;\n    this.remotePassword = password;\n  }\n\n  // 4.1.1 Gathering Candidates\n  async gatherCandidates(cb?: (candidate: Candidate) => void) {\n    if (!this.localCandidatesStart) {\n      this.localCandidatesStart = true;\n      this.promiseGatherCandidates = new Event();\n\n      let address = getHostAddresses(this.useIpv4, this.useIpv6);\n      const { interfaceAddresses } = this.options;\n      if (interfaceAddresses) {\n        const filteredAddresses = address.filter((check) =>\n          Object.values(interfaceAddresses).includes(check),\n        );\n        if (filteredAddresses.length) {\n          address = filteredAddresses;\n        }\n      }\n      if (this.options.additionalHostAddresses) {\n        address = Array.from(\n          new Set([...this.options.additionalHostAddresses, ...address]),\n        );\n      }\n\n      const candidates = await this.getCandidates(address, 5, cb);\n      this.localCandidates = [...this.localCandidates, ...candidates];\n\n      this._localCandidatesEnd = true;\n      this.promiseGatherCandidates.execute();\n    }\n    this.setState(\"completed\");\n  }\n\n  private async getCandidates(\n    addresses: string[],\n    timeout = 5,\n    cb?: (candidate: Candidate) => void,\n  ) {\n    let candidates: Candidate[] = [];\n\n    await Promise.allSettled(\n      addresses.map(async (address) => {\n        // # create transport\n        const protocol = new StunProtocol(this);\n        try {\n          await protocol.connectionMade(\n            isIPv4(address),\n            this.options.portRange,\n            this.options.interfaceAddresses,\n          );\n        } catch (error) {\n          log(\"protocol STUN\", error);\n          return;\n        }\n\n        protocol.localAddress = address;\n        this.protocols.push(protocol);\n\n        // # add host candidate\n        const candidateAddress: Address = [address, protocol.getExtraInfo()[1]];\n\n        protocol.localCandidate = new Candidate(\n          candidateFoundation(\"host\", \"udp\", candidateAddress[0]),\n          1,\n          \"udp\",\n          candidatePriority(1, \"host\"),\n          candidateAddress[0],\n          candidateAddress[1],\n          \"host\",\n        );\n\n        candidates.push(protocol.localCandidate);\n        if (cb) {\n          cb(protocol.localCandidate);\n        }\n      }),\n    );\n\n    let candidatePromises: Promise<Candidate | void>[] = [];\n\n    // # query STUN server for server-reflexive candidates (IPv4 only)\n    const { stunServer, turnServer } = this;\n    if (stunServer) {\n      const stunPromises = this.protocols.map((protocol) =>\n        new Promise<Candidate | void>(async (r, f) => {\n          const timer = setTimeout(f, timeout * 1000);\n          if (\n            protocol.localCandidate?.host &&\n            isIPv4(protocol.localCandidate?.host)\n          ) {\n            const candidate = await serverReflexiveCandidate(\n              protocol,\n              stunServer,\n            ).catch((error) => log(\"error\", error));\n            if (candidate && cb) cb(candidate);\n\n            clearTimeout(timer);\n            r(candidate);\n          } else {\n            clearTimeout(timer);\n            r();\n          }\n        }).catch((error) => {\n          log(\"query STUN server\", error);\n        }),\n      );\n      candidatePromises.push(...stunPromises);\n    }\n\n    const { turnUsername, turnPassword } = this.options;\n    if (turnServer && turnUsername && turnPassword) {\n      const turnCandidate = (async () => {\n        const protocol = await createTurnEndpoint(\n          turnServer,\n          turnUsername,\n          turnPassword,\n          {\n            portRange: this.options.portRange,\n            interfaceAddresses: this.options.interfaceAddresses,\n          },\n        );\n        this.protocols.push(protocol);\n\n        const candidateAddress = protocol.turn.relayedAddress;\n        const relatedAddress = protocol.turn.mappedAddress;\n\n        log(\"turn candidateAddress\", candidateAddress);\n\n        protocol.localCandidate = new Candidate(\n          candidateFoundation(\"relay\", \"udp\", candidateAddress[0]),\n          1,\n          \"udp\",\n          candidatePriority(1, \"relay\"),\n          candidateAddress[0],\n          candidateAddress[1],\n          \"relay\",\n          relatedAddress[0],\n          relatedAddress[1],\n        );\n        if (cb) {\n          cb(protocol.localCandidate);\n        }\n        protocol.receiver = this;\n        return protocol.localCandidate;\n      })().catch((error) => {\n        log(\"query TURN server\", error);\n      });\n\n      if (this.options.forceTurn) {\n        candidates = [];\n        candidatePromises = [];\n      }\n\n      candidatePromises.push(turnCandidate);\n    }\n\n    const extraCandidates = [...(await Promise.allSettled(candidatePromises))]\n      .filter(\n        (\n          v,\n        ): v is PromiseFulfilledResult<\n          Awaited<(typeof candidatePromises)[number]>\n        > => v.status === \"fulfilled\",\n      )\n      .map((v) => v.value)\n      .filter((v): v is Candidate => typeof v !== \"undefined\");\n\n    candidates.push(...extraCandidates);\n\n    return candidates;\n  }\n\n  async connect() {\n    // \"\"\"\n    // Perform ICE handshake.\n    //\n    // This coroutine returns if a candidate pair was successfully nominated\n    // and raises an exception otherwise.\n    // \"\"\"\n    log(\"start connect ice\", this.localCandidates);\n    if (!this._localCandidatesEnd) {\n      if (!this.localCandidatesStart)\n        throw new Error(\"Local candidates gathering was not performed\");\n      if (this.promiseGatherCandidates)\n        // wait for GatherCandidates finish\n        await this.promiseGatherCandidates.asPromise();\n    }\n    if (!this.remoteUsername || !this.remotePassword)\n      throw new Error(\"Remote username or password is missing\");\n\n    // # 5.7.1. Forming Candidate Pairs\n    this.remoteCandidates.forEach(this.pairRemoteCandidate);\n    this.sortCheckList();\n\n    this.unfreezeInitial();\n\n    // # handle early checks\n    this.earlyChecks.forEach((earlyCheck) => this.checkIncoming(...earlyCheck));\n    this.earlyChecks = [];\n\n    // # perform checks\n    // 5.8.  Scheduling Checks\n    for (;;) {\n      if (this.state === \"closed\") break;\n      if (!this.schedulingChecks()) break;\n      await timers.setTimeout(20);\n    }\n\n    // # wait for completion\n    let res: number = ICE_FAILED;\n    while (this.checkList.length > 0 && res === ICE_FAILED) {\n      res = await this.checkListState.get();\n    }\n\n    // # cancel remaining checks\n    this.checkList.forEach((check) => check.handle?.cancel());\n\n    if (res !== ICE_COMPLETED) {\n      throw new Error(\"ICE negotiation failed\");\n    }\n\n    // # start consent freshness tests\n    this.queryConsentHandle = future(this.queryConsent());\n\n    this.setState(\"connected\");\n  }\n\n  private unfreezeInitial() {\n    // # unfreeze first pair for the first component\n    const [firstPair] = this.checkList;\n    if (!firstPair) return;\n    if (firstPair.state === CandidatePairState.FROZEN) {\n      this.setPairState(firstPair, CandidatePairState.WAITING);\n    }\n\n    // # unfreeze pairs with same component but different foundations\n    const seenFoundations = new Set(firstPair.localCandidate.foundation);\n    for (const pair of this.checkList) {\n      if (\n        pair.component === firstPair.component &&\n        !seenFoundations.has(pair.localCandidate.foundation) &&\n        pair.state === CandidatePairState.FROZEN\n      ) {\n        this.setPairState(pair, CandidatePairState.WAITING);\n        seenFoundations.add(pair.localCandidate.foundation);\n      }\n    }\n  }\n\n  // 5.8 Scheduling Checks\n  private schedulingChecks() {\n    // Ordinary Check\n    {\n      // # find the highest-priority pair that is in the waiting state\n      const pair = this.checkList\n        .filter((pair) => {\n          if (this.options.forceTurn && pair.protocol.type === \"stun\")\n            return false;\n          return true;\n        })\n        .find((pair) => pair.state === CandidatePairState.WAITING);\n      if (pair) {\n        pair.handle = future(this.checkStart(pair));\n        return true;\n      }\n    }\n\n    {\n      // # find the highest-priority pair that is in the frozen state\n      const pair = this.checkList.find(\n        (pair) => pair.state === CandidatePairState.FROZEN,\n      );\n      if (pair) {\n        pair.handle = future(this.checkStart(pair));\n        return true;\n      }\n    }\n\n    // # if we expect more candidates, keep going\n    if (!this.remoteCandidatesEnd) {\n      return !this.checkListDone;\n    }\n\n    return false;\n  }\n\n  // 4.1.1.4 ? 生存確認 life check\n  private queryConsent = () =>\n    new PCancelable(async (r, f, onCancel) => {\n      let failures = 0;\n\n      const cancelEvent = new AbortController();\n      onCancel(() => {\n        failures += CONSENT_FAILURES;\n        cancelEvent.abort();\n        f(\"cancel\");\n      });\n\n      // \"\"\"\n      // Periodically check consent (RFC 7675).\n      // \"\"\"\n\n      try {\n        while (!this.remoteIsLite && this.state !== \"closed\") {\n          // # randomize between 0.8 and 1.2 times CONSENT_INTERVAL\n          await timers.setTimeout(\n            CONSENT_INTERVAL * (0.8 + 0.4 * Math.random()) * 1000,\n            undefined,\n            { signal: cancelEvent.signal },\n          );\n\n          const pair = this.nominated;\n          if (!pair) {\n            break;\n          }\n          const request = this.buildRequest(pair, false);\n          try {\n            const [msg, addr] = await pair.protocol.request(\n              request,\n              pair.remoteAddr,\n              Buffer.from(this.remotePassword, \"utf8\"),\n              0,\n            );\n            failures = 0;\n            if (this.state === \"disconnected\") {\n              this.setState(\"connected\");\n            }\n          } catch (error) {\n            log(\"no stun response\");\n            failures++;\n            this.setState(\"disconnected\");\n          }\n          if (failures >= CONSENT_FAILURES) {\n            log(\"Consent to send expired\");\n            this.queryConsentHandle = undefined;\n            // 切断検知\n            r(await this.close());\n            return;\n          }\n        }\n      } catch (error) {}\n    });\n\n  async close() {\n    // \"\"\"\n    // Close the connection.\n    // \"\"\"\n\n    this.setState(\"closed\");\n\n    // # stop consent freshness tests\n    if (this.queryConsentHandle && !this.queryConsentHandle.done()) {\n      this.queryConsentHandle.cancel();\n      try {\n        await this.queryConsentHandle.promise;\n      } catch (error) {\n        // pass\n      }\n    }\n\n    // # stop check list\n    if (this.checkList && !this.checkListDone) {\n      this.checkListState.put(\n        new Promise((r) => {\n          r(ICE_FAILED);\n        }),\n      );\n    }\n\n    this.nominated = undefined;\n    for (const protocol of this.protocols) {\n      if (protocol.close) {\n        await protocol.close();\n      }\n    }\n\n    this.protocols = [];\n    this.localCandidates = [];\n\n    await this.lookup?.close();\n  }\n\n  private setState(state: IceState) {\n    this.state = state;\n    this.stateChanged.execute(state);\n  }\n\n  async addRemoteCandidate(remoteCandidate: Candidate | undefined) {\n    // \"\"\"\n    // Add a remote candidate or signal end-of-candidates.\n\n    // To signal end-of-candidates, pass `None`.\n\n    // :param remote_candidate: A :class:`Candidate` instance or `None`.\n    // \"\"\"\n\n    if (!remoteCandidate) {\n      this.remoteCandidatesEnd = true;\n      return;\n    }\n\n    if (remoteCandidate.host.includes(\".local\")) {\n      try {\n        if (this.state === \"closed\") return;\n        if (!this.lookup) {\n          this.lookup = new MdnsLookup();\n        }\n        const host = await this.lookup.lookup(remoteCandidate.host);\n        remoteCandidate.host = host;\n      } catch (error) {\n        return;\n      }\n    }\n\n    try {\n      validateRemoteCandidate(remoteCandidate);\n    } catch (error) {\n      return;\n    }\n\n    log(\"addRemoteCandidate\", remoteCandidate);\n    this.remoteCandidates.push(remoteCandidate);\n\n    this.pairRemoteCandidate(remoteCandidate);\n    this.sortCheckList();\n  }\n\n  send = async (data: Buffer) => {\n    // \"\"\"\n    // Send a datagram on the first component.\n\n    // If the connection is not established, a `ConnectionError` is raised.\n\n    // :param data: The data to be sent.\n    // \"\"\"\n    await this.sendTo(data);\n  };\n\n  private async sendTo(data: Buffer) {\n    // \"\"\"\n    // Send a datagram on the specified component.\n\n    // If the connection is not established, a `ConnectionError` is raised.\n\n    // :param data: The data to be sent.\n    // :param component: The component on which to send the data.\n    // \"\"\"\n    const activePair = this.nominated;\n    if (activePair) {\n      await activePair.protocol.sendData(data, activePair.remoteAddr);\n    } else {\n      // log(\"Cannot send data, ice not connected\");\n      return;\n    }\n  }\n\n  getDefaultCandidate() {\n    const candidates = this.localCandidates.sort(\n      (a, b) => a.priority - b.priority,\n    );\n    const [candidate] = candidates;\n    return candidate;\n  }\n\n  requestReceived(\n    message: Message,\n    addr: Address,\n    protocol: Protocol,\n    rawData: Buffer,\n  ) {\n    if (message.messageMethod !== methods.BINDING) {\n      this.respondError(message, addr, protocol, [400, \"Bad Request\"]);\n      return;\n    }\n\n    // # authenticate request\n    try {\n      parseMessage(rawData, Buffer.from(this.localPassword, \"utf8\"));\n      if (!this.remoteUsername) {\n        const rxUsername = `${this.localUserName}:${this.remoteUsername}`;\n        if (message.getAttributeValue(\"USERNAME\") != rxUsername) {\n          throw new Error(\"Wrong username\");\n        }\n      }\n    } catch (error) {\n      this.respondError(message, addr, protocol, [400, \"Bad Request\"]);\n      return;\n    }\n\n    const { iceControlling } = this;\n\n    // 7.2.1.1.  Detecting and Repairing Role Conflicts\n    if (iceControlling && message.attributesKeys.includes(\"ICE-CONTROLLING\")) {\n      if (this._tieBreaker >= message.getAttributeValue(\"ICE-CONTROLLING\")) {\n        this.respondError(message, addr, protocol, [487, \"Role Conflict\"]);\n        return;\n      } else {\n        this.switchRole(false);\n      }\n    } else if (\n      !iceControlling &&\n      message.attributesKeys.includes(\"ICE-CONTROLLED\")\n    ) {\n      if (this._tieBreaker < message.getAttributeValue(\"ICE-CONTROLLED\")) {\n        this.respondError(message, addr, protocol, [487, \"Role Conflict\"]);\n      } else {\n        this.switchRole(true);\n        return;\n      }\n    }\n\n    if (\n      this.options.filterStunResponse &&\n      !this.options.filterStunResponse(message, addr, protocol)\n    ) {\n      return;\n    }\n\n    // # send binding response\n    const response = new Message(\n      methods.BINDING,\n      classes.RESPONSE,\n      message.transactionId,\n    );\n    response\n      .setAttribute(\"XOR-MAPPED-ADDRESS\", addr)\n      .addMessageIntegrity(Buffer.from(this.localPassword, \"utf8\"))\n      .addFingerprint();\n    protocol.sendStun(response, addr).catch((e) => {\n      log(\"sendStun error\", e);\n    });\n\n    // todo fix\n    // if (this.checkList.length === 0) {\n    //   this.earlyChecks.push([message, addr, protocol]);\n    // } else {\n    this.checkIncoming(message, addr, protocol);\n    // }\n  }\n\n  dataReceived(data: Buffer, component: number) {\n    try {\n      this.onData.execute(data, component);\n    } catch (error) {\n      log(\"dataReceived\", error);\n    }\n  }\n\n  // for test only\n  set remoteCandidates(value: Candidate[]) {\n    if (this.remoteCandidatesEnd)\n      throw new Error(\"Cannot set remote candidates after end-of-candidates.\");\n    this._remoteCandidates = [];\n    for (const remoteCandidate of value) {\n      try {\n        validateRemoteCandidate(remoteCandidate);\n      } catch (error) {\n        continue;\n      }\n      this.remoteCandidates.push(remoteCandidate);\n    }\n\n    this.remoteCandidatesEnd = true;\n  }\n  get remoteCandidates() {\n    return this._remoteCandidates;\n  }\n\n  private sortCheckList() {\n    sortCandidatePairs(this.checkList, this.iceControlling);\n  }\n\n  private findPair(protocol: Protocol, remoteCandidate: Candidate) {\n    const pair = this.checkList.find(\n      (pair) =>\n        isEqual(pair.protocol, protocol) &&\n        isEqual(pair.remoteCandidate, remoteCandidate),\n    );\n    return pair;\n  }\n\n  private setPairState(pair: CandidatePair, state: CandidatePairState) {\n    log(\"setPairState\", pair.toJSON(), CandidatePairState[state]);\n    pair.updateState(state);\n  }\n\n  private switchRole(iceControlling: boolean) {\n    log(\"switch role\", iceControlling);\n    this.iceControlling = iceControlling;\n    this.sortCheckList();\n  }\n\n  resetNominatedPair() {\n    log(\"resetNominatedPair\");\n    this.nominated = undefined;\n    this.nominating = false;\n  }\n\n  private checkComplete(pair: CandidatePair) {\n    pair.handle = undefined;\n    if (pair.state === CandidatePairState.SUCCEEDED) {\n      // Updating the Nominated Flag\n\n      // https://www.rfc-editor.org/rfc/rfc8445#section-7.3.1.5,\n      // Once the nominated flag is set for a component of a data stream, it\n      // concludes the ICE processing for that component.  See Section 8.\n      // So disallow overwriting of the pair nominated for that component\n      if (pair.nominated && this.nominated == undefined) {\n        log(\"nominated\", pair.toJSON());\n        this.nominated = pair;\n        this.nominating = false;\n\n        // 8.1.2.  Updating States\n\n        // The agent MUST remove all Waiting and Frozen pairs in the check\n        // list and triggered check queue for the same component as the\n        // nominated pairs for that media stream.\n        for (const p of this.checkList) {\n          if (\n            p.component === pair.component &&\n            [CandidatePairState.WAITING, CandidatePairState.FROZEN].includes(\n              p.state,\n            )\n          ) {\n            this.setPairState(p, CandidatePairState.FAILED);\n          }\n        }\n      }\n\n      // Once there is at least one nominated pair in the valid list for\n      // every component of at least one media stream and the state of the\n      // check list is Running:\n      if (this.nominated) {\n        if (!this.checkListDone) {\n          log(\"ICE completed\");\n          this.checkListState.put(new Promise((r) => r(ICE_COMPLETED)));\n          this.checkListDone = true;\n        }\n        return;\n      }\n\n      // 7.1.3.2.3.  Updating Pair States\n      for (const p of this.checkList) {\n        if (\n          p.localCandidate.foundation === pair.localCandidate.foundation &&\n          p.state === CandidatePairState.FROZEN\n        ) {\n          this.setPairState(p, CandidatePairState.WAITING);\n        }\n      }\n    }\n\n    {\n      const list = [CandidatePairState.SUCCEEDED, CandidatePairState.FAILED];\n      if (this.checkList.find(({ state }) => !list.includes(state))) {\n        return;\n      }\n    }\n\n    if (!this.iceControlling) {\n      const target = CandidatePairState.SUCCEEDED;\n      if (this.checkList.find(({ state }) => state === target)) {\n        return;\n      }\n    }\n\n    if (!this.checkListDone) {\n      log(\"ICE failed\");\n      this.checkListState.put(\n        new Promise((r) => {\n          r(ICE_FAILED);\n        }),\n      );\n    }\n  }\n\n  // 3.  Terminology : Check\n  checkStart = (pair: CandidatePair) =>\n    new PCancelable(async (r, f, onCancel) => {\n      onCancel(() => f(\"cancel\"));\n\n      // \"\"\"\n      // Starts a check.\n      // \"\"\"\n\n      log(\"check start\", pair.toJSON());\n\n      this.setPairState(pair, CandidatePairState.IN_PROGRESS);\n\n      const nominate = this.iceControlling && !this.remoteIsLite;\n      const request = this.buildRequest(pair, nominate);\n\n      const result: { response?: Message; addr?: Address } = {};\n      try {\n        const [response, addr] = await pair.protocol.request(\n          request,\n          pair.remoteAddr,\n          Buffer.from(this.remotePassword, \"utf8\"),\n          4,\n        );\n        log(\"response\", response, addr);\n        result.response = response;\n        result.addr = addr;\n      } catch (error: any) {\n        const exc: TransactionError = error;\n        // 7.1.3.1.  Failure Cases\n        log(\"failure case\", exc.response);\n        if (exc.response?.getAttributeValue(\"ERROR-CODE\")[0] === 487) {\n          if (request.attributesKeys.includes(\"ICE-CONTROLLED\")) {\n            this.switchRole(true);\n          } else if (request.attributesKeys.includes(\"ICE-CONTROLLING\")) {\n            this.switchRole(false);\n          }\n          await this.checkStart(pair);\n          r();\n          return;\n        } else {\n          // timeout\n          log(\"CandidatePairState.FAILED\", pair.toJSON());\n          this.setPairState(pair, CandidatePairState.FAILED);\n          this.checkComplete(pair);\n          r();\n          return;\n        }\n      }\n\n      // # check remote address matches\n      if (!isEqual(result.addr, pair.remoteAddr)) {\n        this.setPairState(pair, CandidatePairState.FAILED);\n        this.checkComplete(pair);\n        r();\n        return;\n      }\n\n      // # success\n      if (nominate || pair.remoteNominated) {\n        // # nominated by agressive nomination or the remote party\n        pair.nominated = true;\n      } else if (this.iceControlling && !this.nominating) {\n        // # perform regular nomination\n        this.nominating = true;\n        const request = this.buildRequest(pair, true);\n        try {\n          await pair.protocol.request(\n            request,\n            pair.remoteAddr,\n            Buffer.from(this.remotePassword, \"utf8\"),\n          );\n        } catch (error) {\n          this.setPairState(pair, CandidatePairState.FAILED);\n          this.checkComplete(pair);\n          return;\n        }\n        pair.nominated = true;\n      }\n\n      this.setPairState(pair, CandidatePairState.SUCCEEDED);\n      this.checkComplete(pair);\n      r();\n    });\n\n  // 7.2.  STUN Server Procedures\n  // 7.2.1.3、7.2.1.4、および7.2.1.5\n  checkIncoming(message: Message, addr: Address, protocol: Protocol) {\n    // log(\"checkIncoming\", message.toJSON(), addr);\n    // \"\"\"\n    // Handle a successful incoming check.\n    // \"\"\"\n\n    // find remote candidate\n    let remoteCandidate: Candidate | undefined;\n    const [host, port] = addr;\n    for (const c of this.remoteCandidates) {\n      if (c.host === host && c.port === port) {\n        remoteCandidate = c;\n        break;\n      }\n    }\n    if (!remoteCandidate) {\n      // 7.2.1.3.  Learning Peer Reflexive Candidates\n      remoteCandidate = new Candidate(\n        randomString(10),\n        1,\n        \"udp\",\n        message.getAttributeValue(\"PRIORITY\"),\n        host,\n        port,\n        \"prflx\",\n      );\n      this.remoteCandidates.push(remoteCandidate);\n    }\n\n    // find pair\n    let pair = this.findPair(protocol, remoteCandidate);\n    if (!pair) {\n      pair = new CandidatePair(protocol, remoteCandidate);\n      this.setPairState(pair, CandidatePairState.WAITING);\n      this.checkList.push(pair);\n      this.sortCheckList();\n    }\n\n    // 7.2.1.4.  Triggered Checks\n    if (\n      [CandidatePairState.WAITING, CandidatePairState.FAILED].includes(\n        pair.state,\n      )\n    ) {\n      pair.handle = future(this.checkStart(pair));\n    } else {\n      pair;\n    }\n\n    // 7.2.1.5. Updating the Nominated Flag\n    if (\n      message.attributesKeys.includes(\"USE-CANDIDATE\") &&\n      !this.iceControlling\n    ) {\n      pair.remoteNominated = true;\n      if (pair.state === CandidatePairState.SUCCEEDED) {\n        pair.nominated = true;\n        this.checkComplete(pair);\n      }\n    }\n  }\n\n  private pairRemoteCandidate = (remoteCandidate: Candidate) => {\n    for (const protocol of this.protocols) {\n      if (\n        protocol.localCandidate?.canPairWith(remoteCandidate) &&\n        !this.findPair(protocol, remoteCandidate)\n      ) {\n        const pair = new CandidatePair(protocol, remoteCandidate);\n        if (\n          this.options.filterCandidatePair &&\n          !this.options.filterCandidatePair(pair)\n        ) {\n          continue;\n        }\n        this.checkList.push(pair);\n        this.setPairState(pair, CandidatePairState.WAITING);\n      }\n    }\n  };\n\n  private buildRequest(pair: CandidatePair, nominate: boolean) {\n    const txUsername = `${this.remoteUsername}:${this.localUserName}`;\n    const request = new Message(methods.BINDING, classes.REQUEST);\n    request\n      .setAttribute(\"USERNAME\", txUsername)\n      .setAttribute(\"PRIORITY\", candidatePriority(pair.component, \"prflx\"));\n    if (this.iceControlling) {\n      request.setAttribute(\"ICE-CONTROLLING\", this._tieBreaker);\n      if (nominate) {\n        request.setAttribute(\"USE-CANDIDATE\", null);\n      }\n    } else {\n      request.setAttribute(\"ICE-CONTROLLED\", this._tieBreaker);\n    }\n    return request;\n  }\n\n  private respondError(\n    request: Message,\n    addr: Address,\n    protocol: Protocol,\n    errorCode: [number, string],\n  ) {\n    const response = new Message(\n      request.messageMethod,\n      classes.ERROR,\n      request.transactionId,\n    );\n    response\n      .setAttribute(\"ERROR-CODE\", errorCode)\n      .addMessageIntegrity(Buffer.from(this.localPassword, \"utf8\"))\n      .addFingerprint();\n    protocol.sendStun(response, addr).catch((e) => {\n      log(\"sendStun error\", e);\n    });\n  }\n}\n\nexport class CandidatePair {\n  handle?: Future;\n  nominated = false;\n  remoteNominated = false;\n  // 5.7.4.  Computing States\n  private _state = CandidatePairState.FROZEN;\n  get state() {\n    return this._state;\n  }\n\n  toJSON() {\n    return {\n      protocol: this.protocol.type,\n      remoteAddr: this.remoteAddr,\n    };\n  }\n\n  constructor(public protocol: Protocol, public remoteCandidate: Candidate) {}\n\n  updateState(state: CandidatePairState) {\n    this._state = state;\n  }\n\n  get localCandidate() {\n    if (!this.protocol.localCandidate)\n      throw new Error(\"localCandidate not exist\");\n    return this.protocol.localCandidate;\n  }\n\n  get remoteAddr(): Address {\n    return [this.remoteCandidate.host, this.remoteCandidate.port];\n  }\n\n  get component() {\n    return this.localCandidate.component;\n  }\n}\n\nconst ICE_COMPLETED = 1 as const;\nconst ICE_FAILED = 2 as const;\n\nconst CONSENT_INTERVAL = 5;\nconst CONSENT_FAILURES = 6;\n\nexport enum CandidatePairState {\n  FROZEN = 0,\n  WAITING = 1,\n  IN_PROGRESS = 2,\n  SUCCEEDED = 3,\n  FAILED = 4,\n}\n\ntype IceState = \"disconnected\" | \"closed\" | \"completed\" | \"new\" | \"connected\";\n\nexport interface IceOptions {\n  stunServer?: Address;\n  turnServer?: Address;\n  turnUsername?: string;\n  turnPassword?: string;\n  turnSsl?: boolean;\n  turnTransport?: string;\n  forceTurn?: boolean;\n  useIpv4: boolean;\n  useIpv6: boolean;\n  portRange?: [number, number];\n  interfaceAddresses?: InterfaceAddresses;\n  additionalHostAddresses?: string[];\n  filterStunResponse?: (\n    message: Message,\n    addr: Address,\n    protocol: Protocol,\n  ) => boolean;\n  filterCandidatePair?: (pair: CandidatePair) => boolean;\n}\n\nconst defaultOptions: IceOptions = {\n  useIpv4: true,\n  useIpv6: true,\n};\n\nexport function validateRemoteCandidate(candidate: Candidate) {\n  // \"\"\"\n  // Check the remote candidate is supported.\n  // \"\"\"\n  if (![\"host\", \"relay\", \"srflx\"].includes(candidate.type))\n    throw new Error(`Unexpected candidate type \"${candidate.type}\"`);\n\n  // ipaddress.ip_address(candidate.host)\n  return candidate;\n}\n\nexport function sortCandidatePairs(\n  pairs: CandidatePair[],\n  iceControlling: boolean,\n) {\n  pairs.sort(\n    (a, b) =>\n      candidatePairPriority(\n        a.localCandidate,\n        a.remoteCandidate,\n        iceControlling,\n      ) -\n      candidatePairPriority(\n        b.localCandidate,\n        b.remoteCandidate,\n        iceControlling,\n      ),\n  );\n}\n\n// 5.7.2.  Computing Pair Priority and Ordering Pairs\nexport function candidatePairPriority(\n  local: Candidate,\n  remote: Candidate,\n  iceControlling: boolean,\n) {\n  const G = (iceControlling && local.priority) || remote.priority;\n  const D = (iceControlling && remote.priority) || local.priority;\n  return (1 << 32) * Math.min(G, D) + 2 * Math.max(G, D) + (G > D ? 1 : 0);\n}\n\nexport async function serverReflexiveCandidate(\n  protocol: Protocol,\n  stunServer: Address,\n) {\n  // \"\"\"\n  // Query STUN server to obtain a server-reflexive candidate.\n  // \"\"\"\n\n  // # perform STUN query\n  const request = new Message(methods.BINDING, classes.REQUEST);\n  try {\n    const [response] = await protocol.request(request, stunServer);\n\n    const localCandidate = protocol.localCandidate;\n    if (!localCandidate) throw new Error(\"not exist\");\n\n    return new Candidate(\n      candidateFoundation(\"srflx\", \"udp\", localCandidate.host),\n      localCandidate.component,\n      localCandidate.transport,\n      candidatePriority(localCandidate.component, \"srflx\"),\n      response.getAttributeValue(\"XOR-MAPPED-ADDRESS\")[0],\n      response.getAttributeValue(\"XOR-MAPPED-ADDRESS\")[1],\n      \"srflx\",\n      localCandidate.host,\n      localCandidate.port,\n    );\n  } catch (error) {\n    // todo fix\n    log(\"error serverReflexiveCandidate\", error);\n  }\n}\n\nexport function validateAddress(addr?: Address): Address | undefined {\n  if (addr && Number.isNaN(addr[1])) {\n    return [addr[0], 443];\n  }\n  return addr;\n}\n"]}