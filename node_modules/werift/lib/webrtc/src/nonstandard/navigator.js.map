{"version":3,"file":"navigator.js","sourceRoot":"","sources":["../../../../src/nonstandard/navigator.ts"],"names":[],"mappings":";;;AAAA,mCAAqC;AACrC,iDAA8C;AAC9C,0CAA+D;AAE/D,MAAa,SAAS;IAGpB,YAAY,QAAuD,EAAE;QAFrE;;;;;WAA2B;QAGzB,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;CACF;AAND,8BAMC;AAED,MAAa,YAAa,SAAQ,WAAW;IAI3C,YAAY,KAA6D;QACvE,KAAK,EAAE,CAAC;QAJV;;;;;WAAyB;QACzB;;;;;WAAyB;QAQhB;;;;mBAAe,KAAK,EAC3B,WAAmC,EACb,EAAE;gBACxB,MAAM,KAAK,GAAG,WAAW,CAAC,KAAK;oBAC7B,CAAC,CAAC,IAAI,wBAAgB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;oBACzC,CAAC,CAAC,SAAS,CAAC;gBACd,IAAI,KAAK,EAAE,CAAC;oBACV,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;wBACzC,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;wBAC3B,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,eAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAA,oBAAW,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC5D,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBACrC,CAAC,CAAC,CAAC;gBACL,CAAC;gBACD,MAAM,KAAK,GAAG,WAAW,CAAC,KAAK;oBAC7B,CAAC,CAAC,IAAI,wBAAgB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;oBACzC,CAAC,CAAC,SAAS,CAAC;gBACd,IAAI,KAAK,EAAE,CAAC;oBACV,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;wBACzC,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;wBAC3B,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,eAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAA,oBAAW,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC5D,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBACrC,CAAC,CAAC,CAAC;gBACL,CAAC;gBAED,IAAI,WAAW,CAAC,KAAK,IAAI,WAAW,CAAC,KAAK,EAAE,CAAC;oBAC3C,OAAO,IAAI,mBAAW,CAAC,CAAC,KAAM,EAAE,KAAM,CAAC,CAAC,CAAC;gBAC3C,CAAC;qBAAM,IAAI,WAAW,CAAC,KAAK,EAAE,CAAC;oBAC7B,OAAO,IAAI,mBAAW,CAAC,CAAC,KAAM,CAAC,CAAC,CAAC;gBACnC,CAAC;qBAAM,IAAI,WAAW,CAAC,KAAK,EAAE,CAAC;oBAC7B,OAAO,IAAI,mBAAW,CAAC,CAAC,KAAM,CAAC,CAAC,CAAC;gBACnC,CAAC;gBAED,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;YACrC,CAAC;WAAC;QAEO;;;;mBAAkB,IAAI,CAAC,YAAY;WAAC;QAvC3C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC3B,CAAC;CAsCF;AA9CD,oCA8CC","sourcesContent":["import { randomBytes } from \"crypto\";\nimport { jspack } from \"@shinyoshiaki/jspack\";\nimport { MediaStream, MediaStreamTrack } from \"../media/track\";\n\nexport class Navigator {\n  mediaDevices: MediaDevices;\n\n  constructor(props: ConstructorParameters<typeof MediaDevices>[0] = {}) {\n    this.mediaDevices = new MediaDevices(props);\n  }\n}\n\nexport class MediaDevices extends EventTarget {\n  video?: MediaStreamTrack;\n  audio?: MediaStreamTrack;\n\n  constructor(props: { video?: MediaStreamTrack; audio?: MediaStreamTrack }) {\n    super();\n    this.video = props.video;\n    this.audio = props.audio;\n  }\n\n  readonly getUserMedia = async (\n    constraints: MediaStreamConstraints,\n  ): Promise<MediaStream> => {\n    const video = constraints.video\n      ? new MediaStreamTrack({ kind: \"video\" })\n      : undefined;\n    if (video) {\n      this.video?.onReceiveRtp.subscribe((rtp) => {\n        const cloned = rtp.clone();\n        cloned.header.ssrc = jspack.Unpack(\"!L\", randomBytes(4))[0];\n        video.onReceiveRtp.execute(cloned);\n      });\n    }\n    const audio = constraints.audio\n      ? new MediaStreamTrack({ kind: \"audio\" })\n      : undefined;\n    if (audio) {\n      this.audio?.onReceiveRtp.subscribe((rtp) => {\n        const cloned = rtp.clone();\n        cloned.header.ssrc = jspack.Unpack(\"!L\", randomBytes(4))[0];\n        audio.onReceiveRtp.execute(cloned);\n      });\n    }\n\n    if (constraints.video && constraints.audio) {\n      return new MediaStream([video!, audio!]);\n    } else if (constraints.audio) {\n      return new MediaStream([audio!]);\n    } else if (constraints.video) {\n      return new MediaStream([video!]);\n    }\n\n    throw new Error(\"Not implemented\");\n  };\n\n  readonly getDisplayMedia = this.getUserMedia;\n}\n\ninterface MediaStreamConstraints {\n  audio?: boolean | MediaTrackConstraints;\n  peerIdentity?: string;\n  preferCurrentTab?: boolean;\n  video?: boolean | MediaTrackConstraints;\n}\n\ninterface MediaTrackConstraints extends MediaTrackConstraintSet {\n  advanced?: MediaTrackConstraintSet[];\n}\n\ninterface MediaTrackConstraintSet {\n  aspectRatio?: ConstrainDouble;\n  autoGainControl?: ConstrainBoolean;\n  channelCount?: ConstrainULong;\n  deviceId?: ConstrainDOMString;\n  displaySurface?: ConstrainDOMString;\n  echoCancellation?: ConstrainBoolean;\n  facingMode?: ConstrainDOMString;\n  frameRate?: ConstrainDouble;\n  groupId?: ConstrainDOMString;\n  height?: ConstrainULong;\n  noiseSuppression?: ConstrainBoolean;\n  sampleRate?: ConstrainULong;\n  sampleSize?: ConstrainULong;\n  width?: ConstrainULong;\n}\n\ntype ConstrainDOMString = string | string[] | ConstrainDOMStringParameters;\ninterface ConstrainDOMStringParameters {\n  exact?: string | string[];\n  ideal?: string | string[];\n}\ntype ConstrainBoolean = boolean | ConstrainBooleanParameters;\ninterface ConstrainBooleanParameters {\n  exact?: boolean;\n  ideal?: boolean;\n}\ntype ConstrainULong = number | ConstrainULongRange;\ninterface ConstrainULongRange extends ULongRange {\n  exact?: number;\n  ideal?: number;\n}\ninterface ULongRange {\n  max?: number;\n  min?: number;\n}\ntype ConstrainDouble = number | ConstrainDoubleRange;\ninterface ConstrainDoubleRange extends DoubleRange {\n  exact?: number;\n  ideal?: number;\n}\ninterface DoubleRange {\n  max?: number;\n  min?: number;\n}\n"]}