{"version":3,"file":"track.js","sourceRoot":"","sources":["../../../../src/media/track.ts"],"names":[],"mappings":"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","sourcesContent":["import Event from \"rx.mini\";\nimport { v4 } from \"uuid\";\n\nimport { RtcpPacket, RtpHeader, RtpPacket } from \"../../../rtp/src\";\nimport { EventTarget } from \"../helper\";\nimport { Kind } from \"../types/domain\";\nimport { RTCRtpCodecParameters } from \"./parameters\";\n\nexport class MediaStreamTrack extends EventTarget {\n  readonly uuid = v4();\n  /**MediaStream ID*/\n  streamId?: string;\n  remote = false;\n  label: string;\n  kind!: Kind;\n  id?: string;\n  /**mediaSsrc */\n  ssrc?: number;\n  rid?: string;\n  header?: RtpHeader;\n  codec?: RTCRtpCodecParameters;\n  /**todo impl */\n  enabled = true;\n\n  readonly onReceiveRtp = new Event<[RtpPacket]>();\n  readonly onReceiveRtcp = new Event<[RtcpPacket]>();\n  readonly onSourceChanged = new Event<\n    [Pick<RtpHeader, \"sequenceNumber\" | \"timestamp\">]\n  >();\n\n  stopped = false;\n  muted = true;\n\n  constructor(\n    props: Partial<MediaStreamTrack> & Pick<MediaStreamTrack, \"kind\">,\n  ) {\n    super();\n    Object.assign(this, props);\n\n    this.onReceiveRtp.subscribe((rtp) => {\n      this.muted = false;\n      this.header = rtp.header;\n    });\n\n    this.label = `${this.remote ? \"remote\" : \"local\"} ${this.kind}`;\n  }\n\n  stop = () => {\n    this.stopped = true;\n    this.muted = true;\n    this.onReceiveRtp.complete();\n    this.emit(\"ended\");\n  };\n\n  writeRtp = (rtp: RtpPacket | Buffer) => {\n    if (this.remote) {\n      throw new Error(\"this is remoteTrack\");\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    const packet = Buffer.isBuffer(rtp) ? RtpPacket.deSerialize(rtp) : rtp;\n    packet.header.payloadType =\n      this.codec?.payloadType ?? packet.header.payloadType;\n    this.onReceiveRtp.execute(packet);\n  };\n}\n\nexport class MediaStream {\n  id!: string;\n  tracks: MediaStreamTrack[] = [];\n\n  constructor(props: Partial<MediaStream> | MediaStreamTrack[]) {\n    if (Array.isArray(props)) {\n      this.tracks = props;\n    } else {\n      Object.assign(this, props);\n    }\n    this.id ??= v4();\n  }\n\n  addTrack(track: MediaStreamTrack) {\n    track.streamId = this.id;\n    this.tracks.push(track);\n  }\n\n  getTracks() {\n    return this.tracks;\n  }\n\n  getAudioTracks() {\n    return this.tracks.filter((track) => track.kind === \"audio\");\n  }\n\n  getVideoTracks() {\n    return this.tracks.filter((track) => track.kind === \"video\");\n  }\n}\n"]}