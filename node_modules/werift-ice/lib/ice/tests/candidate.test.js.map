{"version":3,"file":"candidate.test.js","sourceRoot":"","sources":["../../../tests/candidate.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { Candidate } from \"../src/candidate\";\n\ndescribe(\"candidate\", () => {\n  test(\"test_can_pair_ipv4\", () => {\n    const a = Candidate.fromSdp(\n      \"6815297761 1 udp 659136 1.2.3.4 31102 typ host generation 0\",\n    );\n    const b = Candidate.fromSdp(\n      \"6815297761 1 udp 659136 1.2.3.4 12345 typ host generation 0\",\n    );\n    expect(a.canPairWith(b)).toBe(true);\n  });\n\n  test(\"test_can_pair_ipv4_case_insensitive\", () => {\n    const a = Candidate.fromSdp(\n      \"6815297761 1 udp 659136 1.2.3.4 31102 typ host generation 0\",\n    );\n    const b = Candidate.fromSdp(\n      \"6815297761 1 UDP 659136 1.2.3.4 12345 typ host generation 0\",\n    );\n    expect(a.canPairWith(b)).toBe(true);\n  });\n\n  test(\"test_can_pair_ipv6\", () => {\n    const a = Candidate.fromSdp(\n      \"6815297761 1 udp 659136 2a02:0db8:85a3:0000:0000:8a2e:0370:7334 31102 typ host generation 0\",\n    );\n    const b = Candidate.fromSdp(\n      \"6815297761 1 udp 659136 2a02:0db8:85a3:0000:0000:8a2e:0370:7334 12345 typ host generation 0\",\n    );\n    expect(a.canPairWith(b)).toBe(true);\n  });\n\n  test(\"test_cannot_pair_ipv4_ipv6\", () => {\n    const a = Candidate.fromSdp(\n      \"6815297761 1 udp 659136 1.2.3.4 31102 typ host generation 0\",\n    );\n    const b = Candidate.fromSdp(\n      \"6815297761 1 udp 659136 2a02:0db8:85a3:0000:0000:8a2e:0370:7334 12345 typ host generation 0\",\n    );\n    expect(a.canPairWith(b)).toBe(false);\n  });\n\n  test(\"test_cannot_pair_different_components\", () => {\n    const a = Candidate.fromSdp(\n      \"6815297761 1 udp 659136 1.2.3.4 31102 typ host generation 0\",\n    );\n    const b = Candidate.fromSdp(\n      \"6815297761 2 udp 659136 1.2.3.4 12345 typ host generation 0\",\n    );\n    expect(a.canPairWith(b)).toBe(false);\n  });\n\n  test(\"test_cannot_pair_different_transports\", () => {\n    const a = Candidate.fromSdp(\n      \"6815297761 1 udp 659136 1.2.3.4 31102 typ host generation 0\",\n    );\n    const b = Candidate.fromSdp(\n      \"6815297761 1 tcp 659136 1.2.3.4 12345 typ host generation 0 tcptype active\",\n    );\n    expect(a.canPairWith(b)).toBe(false);\n  });\n\n  test(\"test_from_sdp_udp\", () => {\n    const candidate = Candidate.fromSdp(\n      \"6815297761 1 udp 659136 1.2.3.4 31102 typ host generation 0\",\n    );\n    expect(candidate.foundation).toBe(\"6815297761\");\n    expect(candidate.component).toBe(1);\n    expect(candidate.transport).toBe(\"udp\");\n    expect(candidate.priority).toBe(659136);\n    expect(candidate.host).toBe(\"1.2.3.4\");\n    expect(candidate.port).toBe(31102);\n    expect(candidate.type).toBe(\"host\");\n    expect(candidate.generation).toBe(0);\n\n    expect(candidate.toSdp()).toBe(\n      \"6815297761 1 udp 659136 1.2.3.4 31102 typ host generation 0\",\n    );\n  });\n\n  test(\"test_from_sdp_udp_srflx\", () => {\n    const candidate = Candidate.fromSdp(\n      \"1 1 UDP 1686052863 1.2.3.4 42705 typ srflx raddr 192.168.1.101 rport 42705\",\n    );\n    expect(candidate.foundation).toBe(\"1\");\n    expect(candidate.component).toBe(1);\n    expect(candidate.transport).toBe(\"UDP\");\n    expect(candidate.priority).toBe(1686052863);\n    expect(candidate.host).toBe(\"1.2.3.4\");\n    expect(candidate.port).toBe(42705);\n    expect(candidate.type).toBe(\"srflx\");\n    expect(candidate.relatedAddress).toBe(\"192.168.1.101\");\n    expect(candidate.relatedPort).toBe(42705);\n    expect(candidate.generation).toBe(undefined);\n\n    expect(candidate.toSdp()).toBe(\n      \"1 1 UDP 1686052863 1.2.3.4 42705 typ srflx raddr 192.168.1.101 rport 42705\",\n    );\n  });\n\n  test(\"test_from_sdp_tcp\", () => {\n    const candidate = Candidate.fromSdp(\n      \"1936595596 1 tcp 1518214911 1.2.3.4 9 typ host tcptype active generation 0 network-id 1 network-cost 10\",\n    );\n    expect(candidate.foundation).toBe(\"1936595596\");\n    expect(candidate.component).toBe(1);\n    expect(candidate.transport).toBe(\"tcp\");\n    expect(candidate.priority).toBe(1518214911);\n    expect(candidate.host).toBe(\"1.2.3.4\");\n    expect(candidate.port).toBe(9);\n    expect(candidate.type).toBe(\"host\");\n    expect(candidate.tcptype).toBe(\"active\");\n    expect(candidate.generation).toBe(0);\n\n    expect(candidate.toSdp()).toBe(\n      \"1936595596 1 tcp 1518214911 1.2.3.4 9 typ host tcptype active generation 0\",\n    );\n  });\n\n  test(\"test_from_sdp_no_generation\", () => {\n    const candidate = Candidate.fromSdp(\n      \"6815297761 1 udp 659136 1.2.3.4 31102 typ host\",\n    );\n    expect(candidate.foundation).toBe(\"6815297761\");\n    expect(candidate.component).toBe(1);\n    expect(candidate.transport).toBe(\"udp\");\n    expect(candidate.priority).toBe(659136);\n    expect(candidate.host).toBe(\"1.2.3.4\");\n    expect(candidate.port).toBe(31102);\n    expect(candidate.type).toBe(\"host\");\n    expect(candidate.generation).toBe(undefined);\n\n    expect(candidate.toSdp()).toBe(\n      \"6815297761 1 udp 659136 1.2.3.4 31102 typ host\",\n    );\n  });\n\n  test(\"test_from_sdp_no_generation\", () => {\n    try {\n      Candidate.fromSdp(\"6815297761 1 udp 659136 1.2.3.4 31102 typ\");\n    } catch (error) {\n      expect(error).not.toBeNull();\n    }\n  });\n});\n"]}