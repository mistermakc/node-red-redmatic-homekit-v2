{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../tests/utils.ts"],"names":[],"mappings":";;AAKA,kCAUC;AAED,oCAYC;AAED,oDAGC;AAlCD,mCAAyC;AACzC,2BAAkC;AAIlC,SAAgB,WAAW,CAAC,IAAY;IACtC,IAAI,IAAa,CAAC;IAElB,IAAI,CAAC;QACH,IAAI,GAAG,IAAA,iBAAY,EAAC,eAAe,GAAG,IAAI,CAAC,CAAC;IAC9C,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,IAAI,GAAG,IAAA,iBAAY,EAAC,4BAA4B,GAAG,IAAI,CAAC,CAAC;IAC3D,CAAC;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAEM,KAAK,UAAU,YAAY,CAAC,CAAa,EAAE,CAAa;IAC7D,WAAW;IACX,MAAM,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAC3B,CAAC,CAAC,gBAAgB,GAAG,CAAC,CAAC,eAAe,CAAC;IACvC,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,aAAa,CAAC;IACnC,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,aAAa,CAAC;IAEnC,WAAW;IACX,MAAM,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAC3B,CAAC,CAAC,gBAAgB,GAAG,CAAC,CAAC,eAAe,CAAC;IACvC,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,aAAa,CAAC;IACnC,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,aAAa,CAAC;AACrC,CAAC;AAED,SAAgB,oBAAoB,CAAC,IAAgB,EAAE,QAAkB;IACvE,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACtD,IAAA,wBAAe,EAAC,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;AACrD,CAAC","sourcesContent":["import { deepStrictEqual } from \"assert\";\nimport { readFileSync } from \"fs\";\n\nimport type { Connection } from \"../src/ice\";\n\nexport function readMessage(name: string) {\n  let data!: Buffer;\n\n  try {\n    data = readFileSync(\"./tests/data/\" + name);\n  } catch (error) {\n    data = readFileSync(\"./packages/ice/tests/data/\" + name);\n  }\n\n  return data;\n}\n\nexport async function inviteAccept(a: Connection, b: Connection) {\n  // # invite\n  await a.gatherCandidates();\n  b.remoteCandidates = a.localCandidates;\n  b.remoteUsername = a.localUserName;\n  b.remotePassword = a.localPassword;\n\n  // # accept\n  await b.gatherCandidates();\n  a.remoteCandidates = b.localCandidates;\n  a.remoteUsername = b.localUserName;\n  a.remotePassword = b.localPassword;\n}\n\nexport function assertCandidateTypes(conn: Connection, expected: string[]) {\n  const types = conn.localCandidates.map((v) => v.type);\n  deepStrictEqual(new Set(types), new Set(expected));\n}\n"]}