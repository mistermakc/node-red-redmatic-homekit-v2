{"version":3,"file":"model.js","sourceRoot":"","sources":["../../../../src/types/model.ts"],"names":[],"mappings":"","sourcesContent":["import type { Candidate } from \"../candidate\";\nimport type { Message } from \"../stun/message\";\n\nexport type Address = Readonly<[string, number]>;\n\nexport interface Protocol {\n  type: string;\n  request: (\n    message: Message,\n    addr: Address,\n    integrityKey?: Buffer,\n    retransmissions?: any,\n  ) => Promise<[Message, Address]>;\n  close: () => Promise<void>;\n  connectionMade: (...args: any) => Promise<void>;\n  sendStun: (message: Message, addr: Address) => Promise<void>;\n  sendData: (data: Buffer, addr: Address) => Promise<void>;\n  localCandidate?: Candidate;\n  sentMessage?: Message;\n  responseAddr?: Address;\n  responseMessage?: string;\n}\n"]}