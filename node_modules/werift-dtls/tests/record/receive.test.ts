import { SessionType } from "../../src/cipher/suites/abstract";
import AEADCipher from "../../src/cipher/suites/aead";

describe("packages/dtls/tests/record/receive.test.ts", () => {
  xtest("test", () => {
    const cipher = new AEADCipher();
    cipher.clientNonce = Buffer.from([
      0xb9, 0x38, 0x24, 0x51, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
    ]);
    cipher.clientWriteKey = Buffer.from([
      0x4e, 0x76, 0xe7, 0xb2, 0x72, 0x88, 0xe5, 0xe2, 0x9d, 0x3d, 0x3c, 0xa1,
      0x24, 0x07, 0xea, 0x1b,
    ]);
    cipher.serverNonce = Buffer.from([
      0x94, 0xa7, 0xb4, 0xa9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    ]);
    cipher.serverWriteKey = Buffer.from([
      0x5a, 0x0d, 0x07, 0xa7, 0x8d, 0x7e, 0xcf, 0x06, 0xc0, 0x11, 0xc2, 0x1d,
      0x78, 0x93, 0x3d, 0x9b,
    ]);
    cipher.nonceExplicitLength = 8;
    cipher.nonceImplicitLength = 4;
    cipher.authTagLength = 16;
    cipher.blockAlgorithm = "aes-128-gcm";

    const data = Buffer.from([
      0x16, 0xfe, 0xfd, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00,
      0x30, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x09, 0xb8, 0x0e,
      0x92, 0x4b, 0x5d, 0x76, 0xa4, 0x1a, 0xbb, 0xc3, 0x7d, 0x76, 0x0d, 0xe2,
      0xd6, 0x7b, 0xaf, 0x16, 0x0d, 0x49, 0x42, 0xb2, 0xbe, 0xf1, 0xd0, 0x62,
      0x35, 0xc1, 0xa1, 0x10, 0xab, 0xbf, 0x0a, 0xd0, 0xcc, 0x96, 0xc4, 0x6d,
      0xec,
    ]);
    const dec = cipher.decrypt(SessionType.SERVER, data, {
      type: 22,
      version: 65277,
      epoch: 1,
      sequenceNumber: 5,
    });
    console.log(dec);
  });
});
